<?php

namespace app\api\controller;

use think\Controller;
use think\Request;
use app\api\controller\Cross;
use Firebase\JWT\JWT;
use Firebase\JWT\Key;
class CheckToken extends Cross
{

    protected $user_id;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//        解密token，存储用户id;
        $key = '!@#$%*&';
        $token =  request()->header('token');
        if(empty($token)){
            $this->response(300,"你还没有登录");
        }
        try {
            JWT::$leeway = 60; //当前时间减去60，把时间留点余地
            $key = new Key($key, 'HS256');

            $decoded = JWT::decode($token, $key); //HS256方式，这里要和签发的时候对应
            $arr = (array)$decoded;
            $this->user_id= $arr['user_id'];
        } catch (Firebase\JWT\SignatureInvalidException $e) { //签名不正确

            $this->response(301,"签名不正确");
        } catch (Firebase\JWT\BeforeValidException $e) { // 签名在某个时间点之后才能用
            $this->response(301,"token失效");

        } catch (Firebase\JWT\ExpiredException $e) { // token过期
            $this->response(301,"token失效");
        } catch (Exception $e) { //其他错误
            $this->response(301,"未知错误");
        }

    }

}
